"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[517],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),g=r,d=u["".concat(o,".").concat(g)]||u[g]||m[g]||i;return a?n.createElement(d,l(l({ref:t},c),{},{components:a})):n.createElement(d,l({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=g;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},9349:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const i={id:"change-svg-attributes-with-grafana-variables-example",title:"Change svg attributes with grafana variables example"},l=void 0,s={unversionedId:"examples/change-svg-attributes-with-grafana-variables-example",id:"examples/change-svg-attributes-with-grafana-variables-example",title:"Change svg attributes with grafana variables example",description:"Huge thanks to letshin for the original post.",source:"@site/docs/examples/change-svg-attributes-with-grafana-variables-example.md",sourceDirName:"examples",slug:"/examples/change-svg-attributes-with-grafana-variables-example",permalink:"/docs/examples/change-svg-attributes-with-grafana-variables-example",draft:!1,editUrl:"https://github.com/gapitio/gapit-htmlgraphics-panel/edit/main/website/docs/examples/change-svg-attributes-with-grafana-variables-example.md",tags:[],version:"current",frontMatter:{id:"change-svg-attributes-with-grafana-variables-example",title:"Change svg attributes with grafana variables example"},sidebar:"docsSidebar",previous:{title:"Simple example",permalink:"/docs/examples/simple-example"},next:{title:"Communicate between panels",permalink:"/docs/examples/communicate-between-panels"}},o={},p=[],c={toc:p};function u(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Huge thanks to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/letshin"},"letshin")," for the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gapitio/gapit-htmlgraphics-panel/issues/152"},"original post"),".")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Update grafana variable example",src:a(7877).Z,width:"855",height:"347"})),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"For Grafana v8.3.0+ variables used by HTMLGraphics won't update when the variable is changed unless it's wrapped in ",(0,r.kt)("inlineCode",{parentName:"p"},"${}"),".")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"testVariable used",src:a(5837).Z,width:"697",height:"583"})),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HTML/SVG")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<svg width="100" height="100">\n  <circle cx="50" cy="50" r="40" stroke="turquoise" stroke-width="4" fill="red" />\n</svg>\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"onInit")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// For Grafana v8.3.0+ the variable needs to be wrapped in ${}\nconst { testVariable } = customProperties;\nconst testVariableName = testVariable.replace(/[${}]/g, '');\n\nconst circleElt = htmlNode.querySelector('circle');\n\nfunction getGrafanaVariableValue(variable) {\n  return getTemplateSrv().replace(variable);\n}\n\nhtmlNode.addEventListener('panelupdate', () => {\n  if (getGrafanaVariableValue(testVariable) == 'a') {\n    circleElt.setAttribute('fill', 'blue');\n  } else {\n    circleElt.setAttribute('fill', 'green');\n  }\n});\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Custom properties")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "testVariable": "${testVariable}"\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Panel options")," (import/export)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "calcsMutation": "standard",\n  "add100Percentage": true,\n  "centerAlignContent": true,\n  "overflow": "visible",\n  "useGrafanaScrollbar": true,\n  "SVGBaseFix": true,\n  "codeData": "{\\n  \\"testVariable\\": \\"${testVariable}\\"\\n}",\n  "rootCSS": "",\n  "css": "",\n  "html": "<svg width=\\"100\\" height=\\"100\\">\\n  <circle cx=\\"50\\" cy=\\"50\\" r=\\"40\\" stroke=\\"turquoise\\" stroke-width=\\"4\\" fill=\\"red\\" />\\n</svg>\\n",\n  "renderOnMount": true,\n  "onRender": "",\n  "panelupdateOnMount": true,\n  "dynamicHtmlGraphics": false,\n  "dynamicData": false,\n  "dynamicFieldDisplayValues": false,\n  "dynamicProps": false,\n  "onInitOnResize": false,\n  "onInit": "// For Grafana v8.3.0+ the variable needs to be wrapped in ${}\\nconst { testVariable } = customProperties;\\nconst testVariableName = testVariable.replace(/[${}]/g, \'\');\\n\\nconst circleElt = htmlNode.querySelector(\'circle\');\\n\\nfunction getGrafanaVariableValue(variable) {\\n  return getTemplateSrv().replace(variable);\\n}\\n\\nhtmlNode.addEventListener(\'panelupdate\', () => {\\n  if (getGrafanaVariableValue(testVariable) == \'a\'){\\n    circleElt.setAttribute(\'fill\', \'blue\');\\n  } else {\\n    circleElt.setAttribute(\'fill\', \'green\');\\n  }\\n});\\n"\n}\n')))}u.isMDXComponent=!0},7877:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/change-svg-attributes-with-grafana-variables-example-3e678102a95706b40f4f52d81b3a73ea.gif"},5837:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/test-variable-used-e1dc001efd789e40b5506c155e9613c5.png"}}]);