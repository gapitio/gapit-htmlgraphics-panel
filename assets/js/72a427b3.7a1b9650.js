"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[360],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(7462),r=n(7294),l=n(6010),o=n(2389),i=n(7392),s=n(7094),p=n(2466);const u="tabList__CuJ",c="tabItem_LNqP";function m(e){var t,n;const{lazy:o,block:m,defaultValue:d,values:f,groupId:g,className:h}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=f?f:b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),k=(0,i.l)(v,((e,t)=>e.value===t.value));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===d?d:null!=(t=null!=d?d:null==(n=b.find((e=>e.props.default)))?void 0:n.props.value)?t:b[0].props.value;if(null!==y&&!v.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:w}=(0,s.U)(),[C,O]=(0,r.useState)(y),T=[],{blockElementScrollPositionUntilNextRender:E}=(0,p.o5)();if(null!=g){const e=N[g];null!=e&&e!==C&&v.some((t=>t.value===e))&&O(e)}const _=e=>{const t=e.currentTarget,n=T.indexOf(t),a=v[n].value;a!==C&&(E(t),O(a),null!=g&&w(g,String(a)))},x=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=T.indexOf(e.currentTarget)+1;n=null!=(a=T[t])?a:T[0];break}case"ArrowLeft":{var r;const t=T.indexOf(e.currentTarget)-1;n=null!=(r=T[t])?r:T[T.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":m},h)},v.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:e=>T.push(e),onKeyDown:x,onFocus:_,onClick:_},o,{className:(0,l.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":C===t})}),null!=n?n:t)}))),o?(0,r.cloneElement)(b.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function d(e){const t=(0,o.Z)();return r.createElement(m,(0,a.Z)({key:String(t)},e))}},4590:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var a=n(7462),r=(n(7294),n(3905)),l=n(5488),o=n(5162);const i={id:"contributing",title:"Contributing"},s=void 0,p={unversionedId:"contributing",id:"contributing",title:"Contributing",description:"1. Create a fork of the repo.",source:"@site/docs/contributing.mdx",sourceDirName:".",slug:"/contributing",permalink:"/docs/contributing",draft:!1,editUrl:"https://github.com/gapitio/gapit-htmlgraphics-panel/edit/main/website/docs/contributing.mdx",tags:[],version:"current",frontMatter:{id:"contributing",title:"Contributing"},sidebar:"docsSidebar",previous:{title:"Projects",permalink:"/docs/projects"},next:{title:"v2.1.0",permalink:"/docs/release-notes/v2.1.0"}},u={},c=[{value:"Setup grafana for developing HTMLGraphics",id:"setup-grafana-for-developing-htmlgraphics",level:2},{value:"Local installation",id:"local-installation",level:3},{value:"Docker compose",id:"docker-compose",level:3}],m={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a fork of the repo."),(0,r.kt)("li",{parentName:"ol"},"Clone the fork to the grafana plugins folder on your local machine."),(0,r.kt)("li",{parentName:"ol"},"Optional: create a new branch."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#setup-grafana-for-developing-htmlgraphics"},"Setup grafana for developing HTMLGraphics")),(0,r.kt)("li",{parentName:"ol"},"Follow the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/gapitio/gapit-htmlgraphics-panel/blob/6d7bb59277606dbfedad0ac461a10437f1021257/DEVELOPMENT_GUIDE.md#L1-L1"},"DEVELOPMENT_GUIDE"),"."),(0,r.kt)("li",{parentName:"ol"},"Implement the feature/fix."),(0,r.kt)("li",{parentName:"ol"},"Add/change the documentation as needed."),(0,r.kt)("li",{parentName:"ol"},"Create a commit following the ",(0,r.kt)("a",{parentName:"li",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"Conventional Commits")),(0,r.kt)("li",{parentName:"ol"},"Push the changes to your fork on Github, the remote ",(0,r.kt)("inlineCode",{parentName:"li"},"origin"),"."),(0,r.kt)("li",{parentName:"ol"},"From your fork open a pull request to the ",(0,r.kt)("inlineCode",{parentName:"li"},"main")," branch.")),(0,r.kt)("h2",{id:"setup-grafana-for-developing-htmlgraphics"},"Setup grafana for developing HTMLGraphics"),(0,r.kt)("h3",{id:"local-installation"},"Local installation"),(0,r.kt)("p",null,"The grafana directory could be somewhere else than written here. Please check ",(0,r.kt)("a",{parentName:"p",href:"https://grafana.com/docs/grafana/latest/administration/configuration"},"https://grafana.com/docs/grafana/latest/administration/configuration")," to find where your grafana directory is located."),(0,r.kt)(l.Z,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"macos"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"linux",mdxType:"TabItem"},(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"custom.ini")," file at the grafana directory ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/grafana/")," and add the following content:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"custom.ini")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"app_mode = development\n\n[plugins]\n\nallow_loading_unsigned_plugins = true\n"))),(0,r.kt)(o.Z,{value:"macos",mdxType:"TabItem"},(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"custom.ini")," file at the grafana directory ",(0,r.kt)("inlineCode",{parentName:"p"},"/usr/local/etc/grafana/")," and add the following content:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"custom.ini")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"app_mode = development\n\n[plugins]\n\nallow_loading_unsigned_plugins = true\n"))),(0,r.kt)(o.Z,{value:"windows",mdxType:"TabItem"},(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"custom.ini")," file at the grafana directory ",(0,r.kt)("inlineCode",{parentName:"p"},"C:\\Program Files\\GrafanaLabs\\grafana\\conf\\")," and add the following content:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"custom.ini")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"app_mode = development\n\n[plugins]\n\nallow_loading_unsigned_plugins = true\n")))),(0,r.kt)("h3",{id:"docker-compose"},"Docker compose"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Set the volumes path to ",(0,r.kt)("inlineCode",{parentName:"p"},"./grafana-plugins")," and run the docker-compose.yml file above the grafana-plugins folder. ",(0,r.kt)("em",{parentName:"p"},"(The fork needs to be cloned into ./grafana-plugins)."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"version: '3'\nservices:\n  grafana:\n    image: grafana/grafana\n    container_name: grafana\n    restart: always\n    networks:\n      - grafana\n    ports:\n      - 3001:3000\n    volumes:\n      - /path-to-grafana-plugins/grafana-plugins:/var/lib/grafana/plugins\n      - grafana-storage:/var/lib/grafana\n    environment:\n      - GF_APP_MODE=development\n      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=gapit-htmlgraphics-panel\n\nnetworks:\n  grafana:\n    name: grafana\n\nvolumes:\n  grafana-storage:\n")),(0,r.kt)("p",null,"Run in the same folder as the docker-compose.yml file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d\n")))}d.isMDXComponent=!0}}]);