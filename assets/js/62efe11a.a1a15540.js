"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[899],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=a.createContext({}),c=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},u=function(t){var e=c(t.components);return a.createElement(l.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,o=t.mdxType,r=t.originalType,l=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(f,s(s({ref:e},u),{},{components:n})):a.createElement(f,s({ref:e},u))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var r=n.length,s=new Array(r);s[0]=d;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i.mdxType="string"==typeof t?t:o,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9936:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},assets:function(){return u},toc:function(){return p},default:function(){return m}});var a=n(3117),o=n(102),r=(n(7294),n(3905)),s=["components"],i={id:"export-to-csv-influx1.8",title:"Export to CSV (influx1.8)"},l=void 0,c={unversionedId:"examples/export-to-csv/export-to-csv-influx1.8",id:"examples/export-to-csv/export-to-csv-influx1.8",title:"Export to CSV (influx1.8)",description:"Check out the Export to CSV index page for a more detailed explanation of the approach",source:"@site/docs/examples/export-to-csv/influx1.8.md",sourceDirName:"examples/export-to-csv",slug:"/examples/export-to-csv/export-to-csv-influx1.8",permalink:"/docs/examples/export-to-csv/export-to-csv-influx1.8",editUrl:"https://github.com/gapitio/gapit-htmlgraphics-panel/edit/main/website/docs/examples/export-to-csv/influx1.8.md",tags:[],version:"current",frontMatter:{id:"export-to-csv-influx1.8",title:"Export to CSV (influx1.8)"},sidebar:"docsSidebar",previous:{title:"Export to CSV",permalink:"/docs/examples/export-to-csv/"},next:{title:"Export to CSV (influx2)",permalink:"/docs/examples/export-to-csv/export-to-csv-influx2"}},u={},p=[],d={toc:p};function m(t){var e=t.components,i=(0,o.Z)(t,s);return(0,r.kt)("wrapper",(0,a.Z)({},d,i,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Check out the ",(0,r.kt)("a",{parentName:"p",href:"/docs/examples/export-to-csv/"},"Export to CSV index page")," for a more detailed explanation of the approach"))),(0,r.kt)("p",null,(0,r.kt)("img",{loading:"lazy",alt:"Example: export to CSV",src:n(9394).Z,width:"992",height:"681"})),(0,r.kt)("p",null,"This works by using the ",(0,r.kt)("a",{parentName:"p",href:"/docs/references#data-global"},"data object"),", which makes it possible to use ",(0,r.kt)("em",{parentName:"p"},"most")," data sources provided by Grafana."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},'The query can be "hidden" by pressing the "Enable/disable query" button ',(0,r.kt)("em",{parentName:"p"},"(small eye icon)"),". Which will disable the query (for better performance)."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Remember to add a query!!!")),(0,r.kt)("p",null,"Example query using the influx1.8 database:\n",(0,r.kt)("img",{loading:"lazy",alt:"Example: export to CSV query",src:n(5125).Z,width:"770",height:"160"})),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HTML/SVG")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<button>Export to CSV</button>\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"onInit")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const btn = htmlNode.querySelector('button');\n\nconst timeoutLength = 3000;\nconst defaultButtonText = 'Export to CSV';\n\nconst toCsv = (resultsData) => {\n  const [\n    {\n      series: [{ columns, values }],\n    },\n  ] = Object.values(resultsData.results);\n\n  if (values.length <= 0 || columns.length <= 0) {\n    btn.textContent = 'Export failed... (Found no values).';\n    console.warn('Got no values');\n    return;\n  }\n\n  const csv = [\n    columns.join(','),\n    ...values.map((v) => {\n      const [timeField, ...rest] = v;\n      const time = new Date(timeField).toISOString();\n      return [time, ...rest].join(',');\n    }),\n  ].join('\\r\\n');\n\n  return csv;\n};\n\nconst saveCsvFile = (csv, filename) => {\n  const elt = document.createElement('a');\n  elt.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv));\n  elt.setAttribute('download', filename);\n  elt.style.display = 'none';\n  htmlNode.appendChild(elt);\n  elt.click();\n  htmlNode.removeChild(elt);\n};\n\nbtn.onclick = () => {\n  clearTimeout(btn.timeout);\n  btn.textContent = 'Exporting...';\n  // The refId (query name) only updates after a page refresh.\n  const [{ query, refId, datasource }] = data.request.targets;\n  const { from, to } = data.timeRange;\n  const datasourceData = Object.values(grafanaBootData.settings.datasources).find((d) => d.uid === datasource.uid);\n  const datasourceUrl = datasourceData.url;\n  const db = datasourceData.database;\n  const timeFilter = data.request.scopedVars.timeFilter.value;\n  const q = getTemplateSrv().replace(query).replace('$timeFilter', timeFilter);\n\n  const filename = [refId, from.toISOString(), to.toISOString()].join('-') + '.csv';\n\n  const params = new URLSearchParams({\n    db: db,\n    q: q,\n    epoch: 'ms',\n  });\n\n  fetch(datasourceUrl + '/query?' + params.toString(), {\n    headers: {\n      'cache-control': 'no-cache',\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      const csv = toCsv(data);\n      if (csv) {\n        saveCsvFile(toCsv(data), filename);\n        btn.textContent = 'Export finished';\n      }\n\n      btn.timeout = setTimeout(() => {\n        btn.textContent = defaultButtonText;\n      }, timeoutLength);\n    })\n    .catch((e) => {\n      btn.textContent = 'Export failed... (Failed retrieving data)';\n      console.warn(e);\n\n      btn.timeout = setTimeout(() => {\n        btn.textContent = defaultButtonText;\n      }, timeoutLength);\n    });\n};\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Panel options")," (import/export)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "add100Percentage": true,\n  "centerAlignContent": true,\n  "overflow": "visible",\n  "SVGBaseFix": true,\n  "codeData": "{\\n  \\"text\\": \\"Random text\\"\\n}",\n  "rootCSS": "",\n  "css": "* {\\n  font-family: Open Sans;\\n}\\n",\n  "html": "<button>Export to CSV</button>",\n  "renderOnMount": true,\n  "onRender": "",\n  "dynamicHtmlGraphics": false,\n  "dynamicData": true,\n  "dynamicFieldDisplayValues": false,\n  "dynamicProps": false,\n  "panelupdateOnMount": true,\n  "onInitOnResize": false,\n  "onInit": "const btn = htmlNode.querySelector(\\"button\\");\\n\\nconst timeoutLength = 3000;\\nconst defaultButtonText = \\"Export to CSV\\";\\n\\nconst toCsv = (resultsData) => {\\n  const [\\n    {\\n      series: [{ columns, values }],\\n    },\\n  ] = Object.values(resultsData.results);\\n\\n  if (values.length <= 0 || columns.length <= 0) {\\n    btn.textContent = \\"Export failed... (Found no values).\\";\\n    console.warn(\\"Got no values\\");\\n    return;\\n  }\\n\\n  const csv = [\\n    columns.join(\\",\\"),\\n    ...values.map((v) => {\\n      const [timeField, ...rest] = v;\\n      const time = new Date(timeField).toISOString();\\n      return [time, ...rest].join(\\",\\");\\n    }),\\n  ].join(\\"\\\\r\\\\n\\");;\\n\\n  return csv;\\n};\\n\\nconst saveCsvFile = (csv, filename) => {\\n  const elt = document.createElement(\\"a\\");\\n  elt.setAttribute(\\n    \\"href\\",\\n    \\"data:text/csv;charset=utf-8,\\" + encodeURIComponent(csv)\\n  );\\n  elt.setAttribute(\\"download\\", filename);\\n  elt.style.display = \\"none\\";\\n  htmlNode.appendChild(elt);\\n  elt.click();\\n  htmlNode.removeChild(elt);\\n};\\n\\nbtn.onclick = () => {\\n  clearTimeout(btn.timeout);\\n  btn.textContent = \\"Exporting...\\";\\n  // The refId (query name) only updates after a page refresh.\\n  const [{ query, refId, datasource }] = data.request.targets;\\n  const { from, to } = data.timeRange;\\n  const datasourceData = Object.values(\\n    grafanaBootData.settings.datasources\\n  ).find((d) => d.uid === datasource.uid);\\n  const datasourceUrl = datasourceData.url;\\n  const db = datasourceData.database;\\n  const timeFilter = data.request.scopedVars.timeFilter.value;\\n  const q = getTemplateSrv().replace(query).replace(\\"$timeFilter\\", timeFilter);\\n\\n  const filename =\\n    [refId, from.toISOString(), to.toISOString()].join(\\"-\\") + \\".csv\\";\\n\\n  const params = new URLSearchParams({\\n    db: db,\\n    q: q,\\n    epoch: \\"ms\\",\\n  });\\n\\n  fetch(datasourceUrl + \\"/query?\\" + params.toString(), {\\n    headers: {\\n      \\"cache-control\\": \\"no-cache\\",\\n    },\\n  })\\n    .then((res) => res.json())\\n    .then((data) => {\\n      const csv = toCsv(data);\\n      if (csv) {\\n        saveCsvFile(toCsv(data), filename);\\n        btn.textContent = \\"Export finished\\";\\n      }\\n\\n      btn.timeout = setTimeout(() => {\\n        btn.textContent = defaultButtonText;\\n      }, timeoutLength);\\n    })\\n    .catch((e) => {\\n      btn.textContent = \\"Export failed... (Failed retrieving data)\\";\\n      console.warn(e);\\n\\n      btn.timeout = setTimeout(() => {\\n        btn.textContent = defaultButtonText;\\n      }, timeoutLength);\\n    });\\n};\\n"\n}\n')))}m.isMDXComponent=!0},9394:function(t,e,n){e.Z=n.p+"assets/images/example-export-to-csv-2d992219e42fa4fc742ec2ce58fc787e.gif"},5125:function(t,e,n){e.Z=n.p+"assets/images/example-export-to-csv-influx1.8-query-93d2c26a2cb30db218de3fdd138579e1.png"}}]);