{
  "fieldConfig": {
    "defaults": {
      "custom": {},
      "mappings": [],
      "thresholds": {
        "mode": "absolute",
        "steps": [
          {
            "color": "green",
            "value": null
          },
          {
            "color": "red",
            "value": 80
          }
        ]
      }
    },
    "overrides": []
  },
  "gridPos": {
    "h": 24,
    "w": 24,
    "x": 0,
    "y": 0
  },
  "id": 2,
  "options": {
    "add100Percentage": true,
    "centerAlignContent": true,
    "SVGBaseFix": true,
    "codeData": "{\n  \"showcase\": false,\n  \"dummyUrl\": \"www.google.com\",\n  \"autofitpanels\": true,\n  \"mapUrl\": \"\",\n  \"campusUrl\": \"https://stackoverflow.com/\",\n  \"currentBuilding\": \"c\",\n  \"unit\": \"W\",\n  \"loadRange\": [\n    10000,\n    20000\n  ],\n  \"sidebar\": {\n    \"total-it-load\": {\n      \"id\": \"total-it-load-value\",\n      \"metric\": \"\\\"data-hall-1\\\"+\\\"data-hall-2\\\"\"\n    },\n    \"total-cooling\": {\n      \"id\": \"total-cooling-value\",\n      \"metric\": \"total-cooling\"\n    },\n    \"total-pue\": {\n      \"id\": \"total-pue-value\",\n      \"metric\": \"total-pue\"\n    }\n  },\n  \"buildings\": [\n    {\n      \"id\": \"a\",\n      \"url\": \"\"\n    },\n    {\n      \"id\": \"b\",\n      \"url\": \"\"\n    },\n    {\n      \"id\": \"c\",\n      \"url\": \"\"\n    }\n  ],\n  \"dataHalls\": [\n    {\n      \"id\": \"data-hall-1\",\n      \"metric\": \"data-hall-1\",\n      \"url\": \"\"\n    },\n    {\n      \"id\": \"data-hall-2\",\n      \"metric\": \"data-hall-2\",\n      \"url\": \"\"\n    }\n  ],\n  \"pods\": [\n    {\n      \"id\": \"pod-a\",\n      \"metric\": \"pod-a\",\n      \"url\": \"\"\n    },\n    {\n      \"id\": \"pod-b\",\n      \"metric\": \"pod-b\",\n      \"url\": \"https://stackoverflow.com/\"\n    },\n    {\n      \"id\": \"pod-c\",\n      \"metric\": \"pod-c\",\n      \"url\": \"\"\n    }\n  ]\n}",
    "css": "",
    "html": "<svg id=\"Layer_1\" style=\"enable-background:new 0 0 2160 1080\" version=\"1.1\" viewBox=\"0 0 2160 1080\" xmlns=\"http://www.w3.org/2000/svg\">\n <g id=\"background\">\n  <rect id=\"rect5\" width=\"2160\" height=\"1080\" style=\"fill:#efeff1\"/>\n </g>\n <g id=\"content\">\n  <g id=\"floor\">\n   <path id=\"path1119\" transform=\"translate(102.90354,10.16583)\" d=\"m698.50946 65.83018 1.60443 384.77437-1.60443 520.73505h426.88744v-590.88843h129.6408v-314.62099z\" style=\"fill:#ffffff\"/>\n  </g>\n  <g id=\"pods\">\n   <rect id=\"pod-a\" x=\"1280.0775\" y=\"434.01855\" width=\"321.22131\" height=\"84.16581\" style=\"fill:#001a2b\"/>\n   <rect id=\"pod-b\" x=\"1280.0775\" y=\"551.44751\" width=\"321.22131\" height=\"84.16581\" style=\"fill:#001a2b\"/>\n   <rect id=\"pod-c\" x=\"1280.0775\" y=\"758.94647\" width=\"321.22131\" height=\"84.16581\" style=\"fill:#001a2b\"/>\n  </g>\n  <g id=\"pod-values\">\n   <text id=\"pod-a-value\" x=\"1440.5446\" y=\"485.23483\" style=\"fill:#ffffff;font-family:'Open Sans', sans-serif;font-size:23.9407px;text-align:center;text-anchor:middle\"><tspan id=\"tspan973\" style=\"fill:#ffffff\">No data</tspan><tspan id=\"tspan975\" style=\"fill:#ffffff;font-size:18px\"/></text>\n   <text id=\"pod-b-value\" x=\"1440.5446\" y=\"602.66382\" style=\"fill:#ffffff;font-family:'Open Sans', sans-serif;font-size:23.9407px;text-align:center;text-anchor:middle\"><tspan id=\"tspan979\" style=\"fill:#ffffff\">No data</tspan><tspan id=\"tspan981\" style=\"fill:#ffffff;font-size:18px\"/></text>\n   <text id=\"pod-c-value\" x=\"1440.5446\" y=\"810.16278\" style=\"fill:#ffffff;font-family:'Open Sans', sans-serif;font-size:23.9407px;text-align:center;text-anchor:middle\"><tspan id=\"tspan985\" style=\"fill:#ffffff\">No data</tspan><tspan id=\"tspan987\" style=\"fill:#ffffff;font-size:18px\"/></text>\n  </g>\n  <g id=\"pod-text\">\n   <text id=\"pod-a-text\" x=\"1610.0596\" y=\"484.39691\" style=\"fill:#001a2b;font-family:'Open Sans', sans-serif;font-size:23.9407px\">A</text>\n   <text id=\"pod-b-text\" x=\"1610.0596\" y=\"601.83783\" style=\"fill:#001a2b;font-family:'Open Sans', sans-serif;font-size:23.9407px\">B</text>\n   <text id=\"pod-c-text\" x=\"1610.0596\" y=\"809.33679\" style=\"fill:#001a2b;font-family:'Open Sans', sans-serif;font-size:23.9407px\">C</text>\n  </g>\n  <g id=\"pod-title\">\n   <text id=\"text1140\" x=\"1595.5073\" y=\"427.67584\" style=\"fill:#001a2b;font-family:'Open Sans', sans-serif;font-size:21.7643px;font-weight:200;text-align:end;text-anchor:end\">POWER PODS</text>\n  </g>\n  <g id=\"generators\">\n   <rect id=\"rect11\" x=\"1381.2321\" y=\"343.67529\" width=\"216.97813\" height=\"47.874199\" style=\"fill:#bababa\"/>\n   <rect id=\"rect13\" transform=\"scale(1,-1)\" x=\"1280.9648\" y=\"-721.21698\" width=\"216.97813\" height=\"47.874199\" style=\"fill:#bababa\"/>\n   <rect id=\"rect15\" x=\"1280.9648\" y=\"881.73199\" width=\"216.97813\" height=\"47.874199\" style=\"fill:#bababa\"/>\n  </g>\n  <g id=\"generator-title\">\n   <text id=\"text1147\" x=\"1595.5073\" y=\"331.90179\" style=\"fill:#bababa;font-family:'Open Sans', sans-serif;font-size:21.7643px;font-weight:200;text-align:end;text-anchor:end\">GENERATORS</text>\n  </g>\n  <g id=\"data-racks\" style=\"opacity:.25\">\n   <rect id=\"rect37\" x=\"864.24805\" y=\"447.82523\" width=\"262.34872\" height=\"61.940811\" style=\"fill:#bababa\"/>\n   <rect id=\"rect39\" x=\"864.24805\" y=\"354.08939\" width=\"262.34872\" height=\"61.940811\" style=\"fill:#bababa\"/>\n   <rect id=\"rect41\" x=\"864.24805\" y=\"259.59183\" width=\"262.34872\" height=\"61.940811\" style=\"fill:#bababa\"/>\n   <rect id=\"rect27\" x=\"864.24805\" y=\"814.86993\" width=\"262.34872\" height=\"61.940811\" style=\"fill:#bababa\"/>\n   <rect id=\"rect31\" x=\"864.24805\" y=\"720.59912\" width=\"262.34872\" height=\"61.940811\" style=\"fill:#bababa\"/>\n   <rect id=\"rect33\" x=\"864.24805\" y=\"626.32831\" width=\"262.34872\" height=\"61.940811\" style=\"fill:#bababa\"/>\n  </g>\n  <g id=\"data-hall\">\n   <path id=\"data-hall-2\" transform=\"translate(102.90354,10.16583)\" d=\"m1077.5283 559.95834h-370.01884v364.89072h370.01884\" style=\"fill:#49b755;opacity:.75\"/>\n   <path id=\"data-hall-1\" d=\"m1180.4318 201.23367h-370.0188v364.8905h370.0188\" style=\"fill:#49b755;opacity:.75;stroke-width:.707107\"/>\n  </g>\n  <g id=\"data-hall-values\">\n   <text id=\"data-hall-2-value\" x=\"995.27875\" y=\"781.39996\" style=\"fill:#001a2b;font-family:'Open Sans', sans-serif;font-size:23.9407px;text-align:center;text-anchor:middle\"><tspan id=\"tspan32\">No data</tspan><tspan id=\"tspan34\" style=\"font-size:18px\"/></text>\n   <text id=\"data-hall-1-value\" x=\"995.27875\" y=\"414.93396\" style=\"fill:#001a2b;font-family:'Open Sans', sans-serif;font-size:23.9407px;text-align:center;text-anchor:middle\"><tspan id=\"tspan991\">No data</tspan><tspan id=\"tspan993\" style=\"font-size:18px\"/></text>\n  </g>\n  <g id=\"data-hall-text\">\n   <text id=\"data-hall-2-text\" x=\"995.27875\" y=\"739.81775\" style=\"fill:#001a2b;font-family:'Open Sans', sans-serif;font-size:23.9407px;text-align:center;text-anchor:middle\">Data Hall 2</text>\n   <text id=\"data-hall-1-text\" x=\"995.27875\" y=\"373.35175\" style=\"fill:#001a2b;font-family:'Open Sans', sans-serif;font-size:23.9407px;text-align:center;text-anchor:middle\">Data Hall 1</text>\n  </g>\n  <g id=\"other-rooms\">\n   <rect id=\"rect47\" x=\"810.41302\" y=\"123.90168\" width=\"38.377361\" height=\"73.754707\" style=\"fill:#c1c2c6\"/>\n   <rect id=\"rect49\" transform=\"scale(-1,1)\" x=\"-1053.5167\" y=\"123.90168\" width=\"85.56604\" height=\"73.754707\" style=\"fill:#c1c2c6\"/>\n   <rect id=\"rect51\" transform=\"scale(-1,1)\" x=\"-963.85638\" y=\"123.90168\" width=\"53.415089\" height=\"73.754707\" style=\"fill:#c1c2c6\"/>\n   <rect id=\"rect53\" transform=\"scale(1,-1)\" x=\"852.82806\" y=\"-197.6564\" width=\"53.415089\" height=\"53.07547\" style=\"fill:#c1c2c6\"/>\n   <rect id=\"rect55\" x=\"1057.3846\" y=\"123.90168\" width=\"32.254719\" height=\"73.754707\" style=\"fill:#c1c2c6\"/>\n   <rect id=\"rect57\" x=\"1093.6865\" y=\"123.90168\" width=\"86.745293\" height=\"73.754707\" style=\"fill:#c1c2c6\"/>\n   <rect id=\"rect59\" transform=\"scale(1,-1)\" x=\"1231.7998\" y=\"-295.61865\" width=\"118.97169\" height=\"72.320763\" style=\"fill:#c1c2c6\"/>\n   <rect id=\"rect61\" transform=\"scale(1,-1)\" x=\"1231.7998\" y=\"-219.46768\" width=\"118.97169\" height=\"51.943359\" style=\"fill:#c1c2c6\"/>\n   <rect id=\"rect63\" x=\"1231.7998\" y=\"299.44888\" width=\"118.97169\" height=\"83.490517\" style=\"fill:#c1c2c6\"/>\n   <rect id=\"rect71\" transform=\"scale(1,-1)\" x=\"852.82806\" y=\"-140.35451\" width=\"53.415089\" height=\"16.452829\" style=\"fill:#c1c2c6\"/>\n   <rect id=\"rect997\" x=\"1231.7998\" y=\"86.044838\" width=\"118.97168\" height=\"77.649254\" style=\"fill:#c1c2c6\"/>\n  </g>\n </g>\n <g id=\"sidebar\">\n  <g id=\"sidebar-background\">\n   <polyline id=\"sidebar-background-bottom\" transform=\"translate(-102.5566)\" points=\"427.55658 1080 102.5566 1080 102.5566 540 427.55658 540\" style=\"fill:#f6f8f8\"/>\n   <polyline id=\"sidebar-background-top\" transform=\"translate(-102.5566)\" points=\"427.55658 540 102.5566 540 102.5566 0 427.55658 0\" style=\"fill:#ffffff\"/>\n  </g>\n  <g id=\"powered-by-gapit\">\n   <g id=\"gapit-logo\">\n    <path id=\"path9_2_\" d=\"m202.56874 1056.2166v-0.028c0-0.9241 0.28238-1.7095 0.9295-2.3566 0.32791-0.328 0.67111-0.5726 1.07007-0.7341 0.89423-0.3293 1.69034-0.2728 2.51877 0.057 0.40021 0.1617 0.76144 0.4043 1.08444 0.728 0.6442 0.6436 0.96597 1.417 0.96957 2.3196-3e-3 0.9032-0.32654 1.6759-0.97018 2.3196-0.32343 0.3236-0.68549 0.566-1.08621 0.7279-0.40063 0.1617-0.82425 0.2424-1.27106 0.2424-0.46368 0-0.90021-0.036-1.26566-0.1853-0.39926-0.1616-0.72137-0.4061-1.04974-0.7339-0.64658-0.6466-0.9295-1.4325-0.9295-2.3567m8.91824-2.4074c-0.29297-0.7393-0.70819-1.3865-1.23096-1.941-0.52371-0.5545-1.14722-0.9893-1.86322-1.3051-0.71655-0.3156-1.50012-0.4737-2.3465-0.4737-0.75485 0-1.38467 0.1155-1.96967 0.3466-0.58521 0.2311-1.18311 0.5237-1.50729 0.878v-0.9923h-2.98413v16.413h2.98413v-5.6447c0.32446 0.3542 0.92111 0.6466 1.50668 0.8781 0.58536 0.2311 1.23459 0.3465 1.98941 0.3465 0.84698 0 1.61859-0.158 2.33456-0.4736 0.71597-0.3159 1.33084-0.7506 1.85483-1.3052 0.52347-0.5544 0.92889-1.2016 1.22198-1.9409 0.29245-0.7393 0.45123-1.5325 0.45123-2.3794 0 0 0.0122-0.01 0.0122-0.014v-0.014c0-0.8469-0.16022-1.64-0.45242-2.3794\" style=\"fill:#1c567c\"/>\n    <path id=\"path11_2_\" d=\"m213.07206 1062.0186h3.04391v-11.6996h-3.04391z\" style=\"fill:#1c567c\"/>\n    <path id=\"path13_2_\" d=\"m213.07206 1048.5305h3.04391v-2.6264h-3.04391z\" style=\"fill:#3ab44a\"/>\n    <path id=\"path15_2_\" d=\"m223.90101 1059.2731h-2.82678c-0.27725 0-0.57434-0.1414-0.77402-0.3418-0.20065-0.1999-0.35852-0.4878-0.35852-0.7805v-3.4734h2.42667l-0.69327-2.925h-1.7334v-4.3675l-2.68625 0.6932v10.0727c0 0.5239 0.11508 1.0168 0.31534 1.4786 0.20007 0.462 0.47702 0.8661 0.81586 1.213 0.33881 0.3466 0.74292 0.6477 1.20526 0.8481 0.46231 0.2004 0.95883 0.3284 1.48218 0.3284h3.52005z\" style=\"fill:#1c567c\"/>\n    <path id=\"path17_2_\" d=\"m193.24375 1059.2611h-6.1e-4c-0.045 0.019-0.0906 0.036-0.13678 0.053-0.31958 0.11-0.66156 0.1683-1.02463 0.1765-0.0287 6e-4 -0.0571 0-0.0862 0h-0.0785c-0.41849-0.01-0.82007-0.093-1.20407-0.2522-0.40823-0.1698-0.7662-0.4083-1.07425-0.7166-0.6442-0.6442-0.96719-1.426-0.97018-2.3447 3e-3 -0.9193 0.32599-1.7012 0.97018-2.3453 0.3078-0.308 0.66632-0.5467 1.07425-0.716 0.384-0.1594 0.78537-0.2429 1.20407-0.2524 0.0262-5e-4 0.0523 0 0.0785 0h0.0862c0.36331 0.01 0.70523 0.067 1.02463 0.1765 0.0463 0.017 0.0918 0.034 0.13678 0.053h6.1e-4c0.40607 0.1616 0.77579 0.4081 1.10834 0.7405 0.6442 0.6441 0.96719 1.4259 0.97018 2.3452-3e-3 0.9188-0.32599 1.7005-0.97018 2.3447-0.33255 0.3328-0.70221 0.5794-1.10834 0.7411m2.10065-7.9492c-0.3797-0.2537-0.77609-0.5178-1.10229-0.6928-0.48129-0.2404-1.01981-0.3973-1.60779-0.4746-0.0329 0-0.0676-0.01-0.10083-0.013-0.0522-0.01-0.10553-0.012-0.15863-0.016-0.0593-0.01-0.12-0.01-0.18051-0.013-0.0384 0-0.0767-0.01-0.11557-0.01-0.10312 0-0.20767-0.01-0.31421-0.01-0.84756 0-1.62872 0.158-2.3447 0.4736-0.582 0.2564-1.09937 0.593-1.55457 1.0072-0.10486 0.096-0.20743 0.1939-0.30563 0.2979-0.13089 0.1386-0.2547 0.2832-0.37115 0.4332-0.34955 0.4506-0.63403 0.9534-0.85355 1.5079-0.28519 0.6807-0.35907 1.6563-0.362 2.3567v0.023c0 0.8093 0.10107 1.5743 0.3782 2.2962 8e-3 0.02-5e-3 0.041 3e-3 0.061 0.21921 0.5544 0.49429 1.0569 0.84396 1.5072 0.11652 0.1502 0.23544 0.2946 0.3663 0.4331 0.0916 0.097 0.18484 0.1891 0.28232 0.2788 0.45987 0.423 0.98276 0.7663 1.5737 1.0264 0.71658 0.3155 1.49716 0.4736 2.34473 0.4736 0.10654 0 0.21078 0 0.31378-0.01 0.039 0 0.0767 0 0.11545-0.01 0.0603 0 0.12045-0.01 0.17978-0.013 0.0531 0 0.1058-0.01 0.15808-0.016 0.0334 0 0.0533-0.01 0.0864-0.013 1.08905-0.1548 1.88373-0.5568 2.72571-1.1679v0.9804h2.68625v-11.6996h-2.68625z\" style=\"fill:#1c567c\"/>\n    <linearGradient id=\"path19_1_\" x1=\"-570.50513\" x2=\"-570.47809\" y1=\"617.31207\" y2=\"617.31207\" gradientTransform=\"matrix(590.03101,-463.6116,-463.6116,-590.03101,622975.94,100799.88)\" gradientUnits=\"userSpaceOnUse\">\n     <stop id=\"stop125\" style=\"stop-color:#1C567C\" offset=\"0\"/>\n     <stop id=\"stop127\" style=\"stop-color:#28AAE1\" offset=\"1\"/>\n    </linearGradient>\n    <path id=\"path19_2_\" d=\"m174.12126 1042.3027c-0.0857 0-0.17926 0.09-0.17926 0.1755v4.6529c0 0.1541-0.10092 0.2704-0.25507 0.2704h-3.41238c-0.15421 0-0.31137 0.1337-0.31137 0.288v3.474c0 0.154-0.0928 0.2165-0.24692 0.2165h-4.90115c-0.0857 0-0.22125 0.101-0.22125 0.1867v2.6988c0 0.086 0.13559 0.2047 0.22125 0.2047h1.52524c0.10715 0.5795 0.27875 1.2298 0.50867 1.8165l-1.16397 0.6592c-0.0742 0.043-0.0997 0.1316-0.0568 0.2057l1.24054 2.1461c0.0205 0.036 0.0544 0.06 0.0941 0.071h0.0401c0.0269 0 0.0538-0.01 0.0776-0.021l1.16577-0.6736c0.43143 0.5393 0.92172 1.0295 1.46066 1.4607l-0.67291 1.1658c-0.0429 0.074-0.0175 0.1691 0.0567 0.2119l2.14914 1.2405c0.0237 0.014 0.0506 0.021 0.0775 0.021 0.0134 0 0.0269 0 0.0402-0.01 0.0397-0.011 0.0736-0.037 0.0942-0.072l0.65976-1.1639c0.58719 0.23 1.25009 0.4015 1.82971 0.5085v1.5253c0 0.086 0.0935 0.1695 0.17926 0.1695h2.48166c0.0106 0 5e-3 -0.015 5e-3 -0.018v-6.9445c-0.38629 0.1585-0.87149 0.2455-1.35181 0.2455-2.15869 0-3.90167-1.7501-3.90167-3.9088s1.73999-3.9084 3.89868-3.9084c0.48026 0 0.96899 0.087 1.3548 0.2455v-7.1297s6e-3 -0.024-5e-3 -0.024z\" style=\"fill:url(#path19_1_)\"/>\n    <path id=\"path21_2_\" d=\"m172.78141 1044.6887c0 0.1541-0.125 0.2791-0.27914 0.2791h-2.18442c-0.15414 0-0.27914-0.125-0.27914-0.2791v-2.2616c0-0.1541 0.125-0.2791 0.27914-0.2791h2.18442c0.15414 0 0.27914 0.125 0.27914 0.2791z\" style=\"fill:#3ab44a\"/>\n    <path id=\"path23_2_\" d=\"m168.9593 1046.1954c0 0.1541-0.125 0.2791-0.27921 0.2791h-2.18442c-0.15417 0-0.27921-0.125-0.27921-0.2791v-2.2616c0-0.1541 0.12503-0.2791 0.27921-0.2791h2.18442c0.15421 0 0.27921 0.125 0.27921 0.2791z\" style=\"fill:#28aae1\"/>\n    <path id=\"path25_2_\" d=\"m165.56068 1048.4767c0 0.097-0.0824 0.1239-0.18399 0.1239h-1.43134c-0.10156 0-0.20038-0.027-0.20038-0.1239v-1.4469c0-0.097 0.0987-0.2058 0.20038-0.2058h1.43134c0.10162 0 0.18399 0.1085 0.18399 0.2058z\" style=\"fill:#28aae1\"/>\n    <path id=\"path27_2_\" d=\"m169.30622 1050.3668c0 0.1542-0.125 0.2792-0.27914 0.2792h-2.18442c-0.15414 0-0.27914-0.125-0.27914-0.2792v-2.2616c0-0.1542 0.125-0.2792 0.27914-0.2792h2.18442c0.15414 0 0.27914 0.125 0.27914 0.2792z\" style=\"fill:#3ab44a\"/>\n    <path id=\"path29_2_\" d=\"m164.32432 1044.7802c0 0.082-0.0667 0.1489-0.14886 0.1489h-1.13168c-0.0822 0-0.1489-0.067-0.1489-0.1489v-1.2089c0-0.082 0.0667-0.1488 0.1489-0.1488h1.13168c0.0822 0 0.14886 0.067 0.14886 0.1488z\" style=\"fill:#8ec73e\"/>\n    <path id=\"path31_2_\" d=\"m177.18971 1046.839c0.23178 0.068 0.48782 0.1509 0.72495 0.2493 0.75842 0.3156 1.43671 0.7716 2.03366 1.3679l2.14853-2.173c-0.8356-0.8518-1.81775-1.5211-2.94287-2.0068-0.62744-0.2708-1.30753-0.4661-1.96426-0.5859v3.1485z\" style=\"fill:#3ab44a\"/>\n    <path id=\"path33_2_\" d=\"m184.79203 1052.0775c-0.0255-0.256-0.0555-0.505-0.0891-0.7753h-7.51263v3.0518h4.39572c-0.28912 1.1204-0.83499 2.0702-1.63651 2.9058-0.59647 0.5964-1.27643 1.0556-2.03485 1.3625-0.23694 0.096-0.49301 0.1848-0.72495 0.2507v3.1402c0.65674-0.12 1.32428-0.3141 1.95172-0.5833 1.13345-0.4864 2.12399-1.1508 2.96735-1.9942 0.84338-0.8439 1.50912-1.8314 1.99481-2.9656 0.48605-1.1328 0.72913-2.3435 0.72913-3.6211 0-0.2555-0.0126-0.5156-0.0381-0.771\" style=\"fill:#3ab44a\"/>\n   </g>\n   <text id=\"powered-by-text\" x=\"100.40586\" y=\"1062.0081\" style=\"fill:#1c567c;font-family:'Open Sans', sans-serif;font-size:9.73903px\">Powered by</text>\n  </g>\n  <g id=\"load-bar\">\n   <line id=\"low\" x1=\"21.669809\" x2=\"115.5566\" y1=\"960.47168\" y2=\"960.47168\" style=\"fill:none;stroke-miterlimit:10;stroke-width:5;stroke:#00cc33\"/>\n   <line id=\"high\" x1=\"209.44341\" x2=\"303.33017\" y1=\"960.47168\" y2=\"960.47168\" style=\"fill:none;stroke-miterlimit:10;stroke-width:5;stroke:#b00020\"/>\n   <line id=\"mid\" x1=\"115.5566\" x2=\"209.44341\" y1=\"960.47168\" y2=\"960.47168\" style=\"fill:none;stroke-miterlimit:10;stroke-width:5;stroke:#d17405\"/>\n   <g id=\"load-bar-range\">\n    <text id=\"load-bar-range-low\" x=\"68.616135\" y=\"947.83026\" style=\"fill:#2b2c2d;font-family:'Open Sans', sans-serif;font-size:12px;letter-spacing:1;text-align:center;text-anchor:middle\">No range</text>\n    <text id=\"load-bar-range-high\" x=\"256.38971\" y=\"947.83026\" style=\"fill:#2b2c2d;font-family:'Open Sans', sans-serif;font-size:12px;letter-spacing:1;text-align:center;text-anchor:middle\">No range</text>\n    <text id=\"load-bar-range-mid\" x=\"162.53223\" y=\"947.83026\" style=\"fill:#2b2c2d;font-family:'Open Sans', sans-serif;font-size:12px;letter-spacing:1;text-align:center;text-anchor:middle\">No range</text>\n   </g>\n  </g>\n  <g id=\"data-text\">\n   <text id=\"total-it-load-value\" x=\"56.735821\" y=\"645.00403\" style=\"fill:#272729;font-family:'Open Sans', sans-serif;font-size:30px\"><tspan id=\"tspan62\">No data</tspan><tspan id=\"tspan64\" style=\"font-size:24px\"/></text>\n   <text id=\"total-cooling-value\" x=\"56.735821\" y=\"717.00403\" style=\"fill:#272729;font-family:'Open Sans', sans-serif;font-size:30px\"><tspan id=\"tspan67\">No data</tspan><tspan id=\"tspan69\" style=\"font-size:24px\"/></text>\n   <text id=\"total-pue-value\" x=\"56.735821\" y=\"789.00403\" style=\"fill:#272729;font-family:'Open Sans', sans-serif;font-size:30px\"><tspan id=\"tspan72\">No data</tspan><tspan id=\"tspan74\" style=\"font-size:24px\"/></text>\n  </g>\n  <g id=\"underlines\">\n   <line id=\"selected-building-underline-c\" x1=\"127.01693\" x2=\"149.66849\" y1=\"361.31055\" y2=\"361.31055\" style=\"fill:none;stroke-miterlimit:10;stroke-width:2;stroke:#49b755\"/>\n   <line id=\"selected-building-underline-b\" x1=\"92.016899\" x2=\"114.66846\" y1=\"361.31055\" y2=\"361.31055\" style=\"fill:none;stroke-miterlimit:10;stroke-width:2;stroke:#49b755\"/>\n   <line id=\"selected-building-underline-a\" x1=\"57.016907\" x2=\"79.668472\" y1=\"361.31055\" y2=\"361.31055\" style=\"fill:none;stroke-miterlimit:10;stroke-width:2;stroke:#49b755\"/>\n  </g>\n  <g id=\"button-text\">\n   <text id=\"sidebar-building-b-text\" x=\"102.98331\" y=\"356.48056\" style=\"fill:#272729;font-family:'Open Sans', sans-serif;font-size:16px;font-weight:200;text-align:center;text-anchor:middle\">B</text>\n   <text id=\"sidebar-building-a-text\" x=\"68.34269\" y=\"356.48035\" style=\"fill:#272729;font-family:'Open Sans', sans-serif;font-size:16px;font-weight:200;text-align:center;text-anchor:middle\">A</text>\n   <text id=\"sidebar-building-c-text\" x=\"138.08881\" y=\"356.48053\" style=\"fill:#272729;font-family:'Open Sans', sans-serif;font-size:16px;font-weight:200;text-align:center;text-anchor:middle\">C</text>\n  </g>\n  <g id=\"campus-button\">\n   <text id=\"campus-text\" x=\"71.547821\" y=\"191.88287\" style=\"fill:#272729;font-family:'Open Sans', sans-serif;font-size:16px;font-weight:200\">CAMPUS</text>\n   <g id=\"arrow-symbol\">\n    <polyline id=\"polyline143\" transform=\"translate(-102.5566 -.10217285)\" points=\"164.01344 183.5614 160.81345 186.88455 164.03389 190.32761\" style=\"fill:none;stroke-miterlimit:10;stroke:#272729\"/>\n    <line id=\"line145\" x1=\"66.269051\" x2=\"58.669048\" y1=\"186.79405\" y2=\"186.79405\" style=\"fill:none;stroke-miterlimit:10;stroke:#272729\"/>\n   </g>\n  </g>\n  <g id=\"map-button\">\n   <text id=\"map-text\" x=\"71.547821\" y=\"168.89069\" style=\"fill:#272729;font-family:'Open Sans', sans-serif;font-size:16px;font-weight:200\">MAP</text>\n   <g id=\"arrow-symbol_1_\">\n    <polyline id=\"polyline150\" transform=\"translate(-102.5566)\" points=\"168.20265 162.11009 164.8795 158.9101 161.43645 162.13054\" style=\"fill:none;stroke-miterlimit:10;stroke:#272729\"/>\n    <line id=\"line152\" x1=\"62.31123\" x2=\"62.31123\" y1=\"166.9223\" y2=\"159.3223\" style=\"fill:none;stroke-miterlimit:10;stroke:#272729\"/>\n   </g>\n  </g>\n  <g id=\"h2\">\n   <text id=\"total-it-load-text\" x=\"58.094219\" y=\"612.06067\" style=\"fill:#6d6f73;font-family:'Open Sans', sans-serif;font-size:12px;letter-spacing:1\">IT LOAD</text>\n   <text id=\"total-cooling-text\" x=\"58.094219\" y=\"684.06067\" style=\"fill:#6d6f73;font-family:'Open Sans', sans-serif;font-size:12px;letter-spacing:1\">COOLING</text>\n   <text id=\"total-pue-text\" x=\"58.094219\" y=\"756.06067\" style=\"fill:#6d6f73;font-family:'Open Sans', sans-serif;font-size:12px;letter-spacing:1\">PUE</text>\n   <g id=\"building-text\">\n    <text id=\"text83\" x=\"57.19178\" y=\"331.12204\" style=\"fill:#6d6f73;font-family:'Open Sans', sans-serif;font-size:12px;letter-spacing:1\">BUILDING</text>\n   </g>\n  </g>\n  <g id=\"h1\">\n   <text id=\"text77\" x=\"58.094219\" y=\"568.06067\" style=\"fill:#6d6f73;font-family:'Open Sans', sans-serif;font-size:15px;letter-spacing:2\">OVERVIEW</text>\n  </g>\n  <g id=\"title\">\n   <text id=\"current-building-text\" x=\"57.19178\" y=\"295.16461\" style=\"enable-background:new 0 0 2160 1080;fill:#272729;font-family:'Open Sans', sans-serif;font-size:19px\">EXAMPLE</text>\n  </g>\n  <g id=\"logo\">\n   <path id=\"path999\" d=\"m146.10581 69.879543-13.64339 9.341069 13.64339 9.417636\" style=\"fill:none;stroke-width:2.53625;stroke:#557490\"/>\n   <path id=\"path1001\" d=\"m173.42173 69.879543 13.64339 9.341069-13.64339 9.417636\" style=\"fill:none;stroke-width:2.53625;stroke:#557490\"/>\n   <path id=\"path1003\" d=\"m141.92266 104.21754 28.81555-53.375959c1.4488 2.255923 4.40806 4.129378 7.61448 3.95654l-32.39883 51.733619c-1.75192 2.53256-5.27781 0.23446-4.0312-2.3142z\" style=\"fill:#b9cee1;stroke-width:.169084\"/>\n   <path id=\"path1005\" d=\"m185.07134 36.060543c-3.58328 0.07465-8.5103 1.045119-11.49636 5.076311-1.94094 2.612813-2.76212 6.718657 0.22396 9.480763 3.05516 2.66361 7.0161 2.147968 9.33145-0.223957 3.54577-3.42653 4.74414-10.007157 11.64567-12.690781-1.79164-0.746523-5.44957-1.791642-9.70472-1.642336zm-8.76709 7.679245c-1.54405 2.106847-3.16042 2.361252-3.34788 0.120446-0.17659-2.61138 4.27253-4.648063 4.27253-4.648063 2.82795-1.768227 5.91602-1.828048 7.65231-1.913084-4.67641 1.466695-8.57696 6.440701-8.57696 6.440701z\" style=\"fill:#c92a7d;stroke-width:.169084\"/>\n  </g>\n </g>\n <g id=\"click\" style=\"opacity:0\">\n  <rect id=\"map-click\" x=\"51.826656\" y=\"151.55865\" width=\"63.275082\" height=\"23\"/>\n  <rect id=\"campus-click\" x=\"51.826656\" y=\"174.55865\" width=\"94.72496\" height=\"23\"/>\n  <path id=\"data-hall-1-click\" d=\"m810.36582 200.49344h370.06598v365.63073l-370.0188-3e-5z\"/>\n  <rect id=\"pod-a-click\" x=\"1280.0775\" y=\"434.01855\" width=\"321.22131\" height=\"84.16581\"/>\n  <rect id=\"pod-b-click\" x=\"1280.0775\" y=\"551.44751\" width=\"321.22131\" height=\"84.16581\"/>\n  <rect id=\"pod-c-click\" x=\"1280.0775\" y=\"758.94647\" width=\"321.22131\" height=\"84.16581\"/>\n  <rect id=\"sidebar-building-b-click\" x=\"85.843002\" y=\"337.547\" width=\"35\" height=\"28\" style=\"stroke-width:1.02323\"/>\n  <rect id=\"sidebar-building-a-click\" x=\"50.842999\" y=\"337.547\" width=\"35\" height=\"28\" style=\"stroke-width:1.02323\"/>\n  <rect id=\"sidebar-building-c-click\" x=\"120.843\" y=\"337.547\" width=\"35\" height=\"28\" style=\"stroke-width:1.02323\"/>\n  <path id=\"data-hall-2-click\" d=\"m810.36586 570.12417h370.06594v364.89075l-370.0188-3e-5z\"/>\n </g>\n</svg>\n",
    "onRender": "const UNIT_PREFIXES = {\n  '24': 'Y',\n  '21': 'Z',\n  '18': 'E',\n  '15': 'P',\n  '12': 'T',\n  '9': 'G',\n  '6': 'M',\n  '3': 'k',\n  '0': '',\n  '-3': 'm',\n  '-6': 'µ',\n  '-9': 'n',\n  '-12': 'p',\n  '-15': 'f',\n  '-18': 'a',\n  '-21': 'z',\n  '-24': 'y',\n};\n\n/**\n * Formats num into SI metric prefixes\n * https://en.wikipedia.org/wiki/Metric_prefix\n *\n * @param {any} num - The number that will be formatted as SI metric prefix\n * @param {number} [digits=1] - Amount of digits\n * @param {string} [unit=codeData.unit] - The unit which will be returned before the unit prefix\n * @param {boolean} [precision=false] - Use toExponential (true) or toFixed (false)\n * @return {Array<string, string>} [value, unit]\n */\n\nconst formatSI = (num, digits = 1, unit = codeData.unit, precision = false) => {\n  if ([0, '0'].includes(num)) {\n    return ['0', ''];\n  } else if (num == 'No data' || !num) {\n    return ['No data', ''];\n  }\n\n  let sig = Math.abs(num); // Significant figure\n  let exponent = 0;\n\n  while (sig >= 1000 && exponent < 24) {\n    sig /= 1000;\n    exponent += 3;\n  }\n  while (sig < 1 && exponent > -24) {\n    sig *= 1000;\n    exponent -= 3;\n  }\n\n  const signPrefix = num < 0 ? '-' : '';\n\n  // If the Significant figure is more than 1000 Y (10^27)\n  if (sig > 1000) {\n    return [signPrefix + sig.toExponential(1), UNIT_PREFIXES[exponent] + unit];\n  }\n\n  const formattedSig = precision ? sig.toPrecision(digits) : sig.toFixed(digits);\n  return [signPrefix + formattedSig, UNIT_PREFIXES[exponent] + unit];\n};\n\n/**\n * Calculates a calculation string. E.g \"100+200-100*2\"\n *\n * @param {string} string - Calculation string (\"10+3*5\")\n * @return {number} Calculated string value\n */\nconst calculateString = string => {\n  return new Function('return ' + string)();\n};\n\n/**\n * Gets a random number\n *\n * @return {number} Random number\n */\nconst getShowcaseMetric = () => {\n  // Return a random number\n  return Math.random() * 2000000;\n};\n\n/**\n * Calculates a metric string. E.g \"random-metric-1\"+\"random-metric-2\"\n *\n * @param {string} metricCalculationString - The metric calculation string E.g \"random-metric-1\"+\"random-metric-2\"\n * @return {number} Calculated string\n */\nconst getCalculationMetric = metricCalculationString => {\n  // Replace the metric names the metric value\n  const splitMetricCalculation = metricCalculationString.replace(/\"([^\"]*)\"/g, metricName => {\n    return getMetric(metricName.replace(/\"/g, ''), 0);\n  });\n\n  return calculateString(splitMetricCalculation);\n};\n\n/**\n * Gets a metric value by name/alias\n *\n * @param {string} metricName - Metric name\n * @param {any} noDataValue - The value to return when there is no data\n * @return {any} - Metric value\n */\nconst getMetricByName = (metricName, noDataValue) => {\n  const filteredSeries = data.series.filter(series => series.name == metricName);\n  if (filteredSeries.length > 0) {\n    return filteredSeries[0].fields[1].state.calcs.last;\n  }\n  return noDataValue;\n};\n\n/**\n *\n *\n * @param {string} metric\n * @param {string} [noDataValue='No data']\n * @return {any} - Metric value\n */\nconst getMetric = (metric, noDataValue = 'No data') => {\n  /*\n    Since the codeData is parsed as an Object in the plugin,\n    it can be used as a normal javascript dictionary.\n  */\n\n  if (codeData.showcase) {\n    return getShowcaseMetric();\n  } else if (metric.includes('\"')) {\n    return getCalculationMetric(metric);\n  }\n\n  return getMetricByName(metric, noDataValue);\n};\n\n/**\n * Updates the sidebar values\n */\nconst updateSidebarValues = () => {\n  htmlNode.getElementById(codeData.sidebar['total-it-load'].id).textContent = formatSI(\n    getMetric(codeData.sidebar['total-it-load'].metric)\n  ).join(' ');\n  htmlNode.getElementById(codeData.sidebar['total-cooling'].id).textContent = formatSI(\n    getMetric(codeData.sidebar['total-cooling'].metric)\n  ).join(' ');\n\n  let pueValue = getMetric(codeData.sidebar['total-pue'].metric);\n  if (pueValue !== 'No data') {\n    pueValue = pueValue.toFixed(2);\n  }\n  htmlNode.getElementById(codeData.sidebar['total-pue'].id).textContent = pueValue;\n};\n\n/**\n * Updates the data hall values\n */\nconst updateDataHalls = () => {\n  for (const dataHall of codeData.dataHalls) {\n    const value = getMetric(`${dataHall.metric}`);\n    const valueSI = formatSI(value);\n\n    htmlNode.getElementById(`${dataHall.id}-value`).textContent = valueSI.join(' ');\n  }\n};\n\n/**\n * Updates the pod values\n */\nconst updatePods = () => {\n  for (const pod of codeData.pods) {\n    const value = getMetric(`${pod.metric}`);\n    const valueSI = formatSI(value);\n\n    htmlNode.getElementById(`${pod.id}-value`).textContent = valueSI.join(' ');\n  }\n};\n\nconst initialize = () => {\n  updateSidebarValues();\n  updateDataHalls();\n  updatePods();\n};\n\ninitialize();\n",
    "onInit": "const UNIT_PREFIXES = {\n  '24': 'Y',\n  '21': 'Z',\n  '18': 'E',\n  '15': 'P',\n  '12': 'T',\n  '9': 'G',\n  '6': 'M',\n  '3': 'k',\n  '0': '',\n  '-3': 'm',\n  '-6': 'µ',\n  '-9': 'n',\n  '-12': 'p',\n  '-15': 'f',\n  '-18': 'a',\n  '-21': 'z',\n  '-24': 'y',\n};\n\n/**\n * Formats num into SI metric prefixes\n * https://en.wikipedia.org/wiki/Metric_prefix\n *\n * @param {*} num - The number that will be formatted as SI metric prefix\n * @param {number} [digits=1] - Amount of digits\n * @param {string} [unit=codeData.unit] - The unit which will be returned before the unit prefix\n * @param {boolean} [precision=false] - Use toExponential (true) or toFixed (false)\n * @return {Array<string, string>} [value, unit]\n */\n\nconst formatSI = (num, digits = 1, unit = codeData.unit, precision = false) => {\n  if ([0, '0'].includes(num)) {\n    return ['0', ''];\n  } else if (num == 'No data' || !num) {\n    return ['No data', ''];\n  }\n\n  let sig = Math.abs(num); // Significant figure\n  let exponent = 0;\n\n  while (sig >= 1000 && exponent < 24) {\n    sig /= 1000;\n    exponent += 3;\n  }\n  while (sig < 1 && exponent > -24) {\n    sig *= 1000;\n    exponent -= 3;\n  }\n\n  const signPrefix = num < 0 ? '-' : '';\n\n  // If the Significant figure is more than 1000 Y (10^27)\n  if (sig > 1000) {\n    return [signPrefix + sig.toExponential(1), UNIT_PREFIXES[exponent] + unit];\n  }\n\n  const formattedSig = precision ? sig.toPrecision(digits) : sig.toFixed(digits);\n  return [signPrefix + formattedSig, UNIT_PREFIXES[exponent] + unit];\n};\n\n/**\n * Adds autofitpanels parameter to the url.\n * Which is used when going to a different grafana dashboard,\n * and the panels will scale to fit.\n *\n * @param {string} url\n * @return {string} url with autofitpanels parameter\n */\nconst addAutofitpanelsParam = url => {\n  if (!url.includes('?')) {\n    url += '?autofitpanels';\n  } else if (!url.includes('autofitpanels')) {\n    url += '&autofitpanels';\n  }\n\n  return url;\n};\n\n/**\n * Handles the link click and hovering\n *\n * @param {string} url - URL to be redirected to when clicked\n * @param {string} clickEltId - ID of the click element\n * @param {string} textEltId - ID of the text element\n * @param {Array<number, number>} [fontWeights=[200, 400]] - Font weight to scale from when hovering\n */\nconst linkHandler = (url, clickEltId, textEltId, fontWeights = [200, 400]) => {\n  if (!url && codeData.showcase) {\n    url = codeData.dummyUrl;\n  }\n\n  if (url) {\n    if (codeData.autofitpanels) {\n      url = addAutofitpanelsParam(url);\n    }\n\n    const clickElt = htmlNode.getElementById(clickEltId);\n    const textElt = htmlNode.getElementById(textEltId);\n\n    clickElt.onclick = event => window.open(url, event.ctrlKey ? '_blank' : '_self');\n    clickElt.onmouseenter = () => (textElt.style.fontWeight = fontWeights[1]);\n    clickElt.onmouseleave = () => (textElt.style.fontWeight = fontWeights[0]);\n    clickElt.style.cursor = 'pointer';\n    clickElt.style.userSelect = 'none';\n  }\n};\n\n/**\n * Handles the sidebar building link clicks\n */\nconst sidebarBuildingLinkHandler = () => {\n  for (const building of codeData.buildings) {\n    if (building.id !== codeData.currentBuilding) {\n      linkHandler(building.url, `sidebar-building-${building.id}-click`, `sidebar-building-${building.id}-text`);\n      // Hide the underline for the building it is not under\n      htmlNode.getElementById(`selected-building-underline-${building.id}`).style.display = 'none';\n    }\n  }\n};\n\n/**\n * Handles the sidebar link clicks\n */\nconst sidebarLinkHandler = () => {\n  linkHandler(codeData.mapUrl, 'map-click', 'map-text');\n  linkHandler(codeData.campusUrl, 'campus-click', 'campus-text');\n  sidebarBuildingLinkHandler();\n};\n\n/**\n * Handles the data hall link clicks\n */\nconst dataHallLinkHandler = () => {\n  for (const dataHall of codeData.dataHalls) {\n    /*\n      Since the font weight of the data hall text is 400,\n      the font weight will go from 400 -> 600 (normal to semi bold).\n    */\n    linkHandler(dataHall.url, `${dataHall.id}-click`, `${dataHall.id}-text`, [400, 600]);\n  }\n};\n\n/**\n * Handles the pod link clicks\n */\nconst podLinkHandler = () => {\n  for (const pod of codeData.pods) {\n    linkHandler(pod.url, `${pod.id}-click`, `${pod.id}-text`, [400, 600]);\n  }\n};\n\n/**\n * Sets the load range\n */\nconst setLoadRange = () => {\n  const loadRange = codeData.loadRange;\n\n  const loadRangeMinSI = formatSI(loadRange[0]);\n  const loadRangeMaxSI = formatSI(loadRange[1]);\n\n  const loadRangeMinFormatted = `${loadRangeMinSI[0]} ${loadRangeMinSI[1]}`\n  const loadRangeMaxFormatted = `${loadRangeMaxSI[0]} ${loadRangeMaxSI[1]}`\n\n  htmlNode.getElementById('load-bar-range-low').textContent = `< ${loadRangeMinFormatted}`;\n  htmlNode.getElementById('load-bar-range-mid').textContent = `${loadRangeMinFormatted} - ${loadRangeMaxFormatted}`;\n  htmlNode.getElementById('load-bar-range-high').textContent = `${loadRangeMaxFormatted} <`;\n};\n\n/**\n * Sets the color (fill/stroke) of the element\n *\n * @param {SVGElement} elt\n * @param {boolean} [fill=false]\n * @param {boolean} [stroke=false]\n */\nconst setElementColor = (elt, fill = false, stroke = false) => {\n  if (fill !== false) elt.style.fill = fill;\n  if (stroke !== false) elt.style.stroke = stroke;\n};\n\n/**\n * Sets the color (fill/stroke) of the element based on the id\n *\n * @param {string} eltId\n * @param {boolean} [fill=false]\n * @param {boolean} [stroke=false]\n */\nconst setElementColorById = (eltId, fill = false, stroke = false) => {\n  const elt = htmlNode.getElementById(eltId);\n  setElementColor(elt, fill, stroke);\n};\n\n/**\n * Sets the color (fill/stroke) of the elements in the group based on the id\n *\n * @param {string} groupId\n * @param {boolean} [fill=false]\n * @param {boolean} [stroke=false]\n */\nconst setGroupElementColorById = (groupId, fill = false, stroke = false) => {\n  const groupElt = htmlNode.getElementById(groupId);\n  [...groupElt.children].forEach(elt => {\n    setElementColor(elt, fill, stroke);\n  });\n};\n\n/**\n * Sets the color of the button based on the id\n *\n * @param {string} buttonId\n */\nconst setButtonElementColorById = buttonId => {\n  const elt = htmlNode.getElementById(buttonId);\n  elt.children[0].style.fill = '#fff';\n  elt.children[1].children.forEach(elt => (elt.style.stroke = '#fff'));\n};\n\n/**\n * Changes the theme to dark theme\n */\nconst darkTheme = () => {\n  setGroupElementColorById('background', '#161719');\n\n  setElementColorById('sidebar-background-top', '#0a0a0a');\n  setElementColorById('sidebar-background-bottom', '#0f0f0f');\n  setGroupElementColorById('title', '#fff');\n  setGroupElementColorById('h1', '#fff');\n  setGroupElementColorById('h2', '#77787d');\n  setGroupElementColorById('data-text', '#fff');\n  setGroupElementColorById('load-bar-range', '#77787d');\n\n  setButtonElementColorById('map-button');\n  setButtonElementColorById('campus-button');\n  setGroupElementColorById('button-text', '#fff');\n\n  setGroupElementColorById('floor', '#0f0f0f');\n  setGroupElementColorById('other-rooms', '#2b2d30');\n  setGroupElementColorById('generators', '#2b2d30');\n\n  setGroupElementColorById('pod-title', '#fff');\n  setGroupElementColorById('pod-text', '#fff');\n  setGroupElementColorById('pods', '#0f7dcc');\n};\n\nconst initialize = () => {\n  if (theme.isDark) {\n    darkTheme();\n  }\n  sidebarLinkHandler();\n  dataHallLinkHandler();\n  podLinkHandler();\n  setLoadRange();\n};\n\ninitialize();\n",
    "orientation": "auto",
    "reduceOptions": {
      "calcs": ["last"],
      "fields": "/.*/",
      "values": false
    }
  },
  "pluginVersion": "7.1.5",
  "targets": [
    {
      "alias": "data-hall-1",
      "max": 100000,
      "min": 1,
      "refId": "A",
      "scenarioId": "random_walk",
      "spread": 10000
    },
    {
      "alias": "data-hall-2",
      "max": 100000,
      "min": 1,
      "refId": "C",
      "scenarioId": "random_walk",
      "spread": 10000
    },
    {
      "alias": "total-pue",
      "max": 1,
      "min": 0,
      "noise": 0.1,
      "refId": "B",
      "scenarioId": "random_walk",
      "spread": 1
    }
  ],
  "transformations": [],
  "transparent": true,
  "type": "gapit-htmlgraphics-panel",
  "timeFrom": null,
  "timeShift": null,
  "title": "",
  "links": [],
  "datasource": null
}
